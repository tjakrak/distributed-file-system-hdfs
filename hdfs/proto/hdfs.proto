syntax = "proto3";
option go_package = "./message";

/* protoc -I=/Users/ryantjakrakartadinata/go/src/P1-gobald/hdfs/proto --go_out=/Users/ryantjakrakartadinata/go/src/P1-gobald/hdfs /Users/ryantjakrakartadinata/go/src/P1-gobald/hdfs/proto/hdfs.proto */

enum operationType {
  GET = 0;
  PUT = 1;
  DELETE = 2;
  LS = 3;
}

/* Register a username */
message ClientRequest {
  string directory = 1;
  string hashed_directory = 2;
  uint64 file_size = 3;
  int32 chunk_id = 4;
  uint64 chunk_size = 5;
  bytes chunk_bytes = 6;
  map<int32, StorageInfoList> storage_info_per_chunk = 7; // chunk_id, list of storage node
  operationType type = 8;
}

message ControllerResponse {
  uint64 chunk_size = 1;
  string error = 2;
  repeated string file_list = 3;
  map<int32, StorageInfoList> storage_info_per_chunk = 4;
  operationType type = 5;
}

message StorageRequest {
  string hashed_directory = 1;
  uint64 chunk_size = 2;
  bytes chunk_bytes = 3;
}

message StorageResponse {
  bool ack = 1;
  string hashed_directory = 2;
  int32 chunk_id = 3;
  uint64 chunk_size = 4;
  bytes chunk_bytes = 5;
  operationType type = 6;
}

message StorageInfo {
  string host = 1;
  int32 port = 2;
  bool isAlive = 3;
}

message StorageInfoList {
  repeated StorageInfo storage_info = 1;
}

/* Heartbeat message */
message Heartbeat {
  int32 id = 1;
  string host_and_port = 2;
  uint64 space_available = 3;
  int32 storage = 4;
  int32 retrievals = 5;
}

message Wrapper {
  oneof msg {
    ClientRequest client_req_message = 1;
    ControllerResponse controller_res_message = 2;
    StorageRequest storage_req_message = 3;
    StorageResponse storage_res_message = 4;
    Heartbeat hb_message = 5;
  }
}
